import net.masterthought.cucumber.ReportBuilder

group ''
version '1.0-SNAPSHOT'
apply plugin: 'java'
apply plugin: 'idea'

repositories {
    jcenter()
}

buildscript {
    repositories {
        jcenter()
        maven {
            url 'http://repo.bodar.com'
        }
    }
    dependencies {
        classpath 'net.masterthought:cucumber-reporting:0.1.0'
    }
}

configurations {
    cucumberRuntime {
        extendsFrom testRuntime
    }
}

dependencies {
    testCompile 'junit:junit:4.12'

    compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.141.59'
    compile group: 'io.github.bonigarcia', name: 'webdrivermanager', version: '4.0.0'
    compile group: 'io.cucumber', name: 'cucumber-java', version: '6.0.0'
    compile group: 'io.cucumber', name: 'cucumber-testng', version: '6.0.0'

    compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
    compile group: 'com.jayway.jsonpath', name: 'json-path', version: '2.4.0'

    compile group: 'io.rest-assured', name: 'rest-assured', version: '4.3.3'
    compile group: 'io.rest-assured', name: 'json-path', version: '4.3.3'
    compile group: 'io.rest-assured', name: 'json-schema-validator', version: '4.3.3'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
    compile 'io.rest-assured:rest-assured:4.3.3'
    compile 'org.everit.json:org.everit.json.schema:1.3.0'
}

def generateReport(String pathCucumber, String pathReport) {
    File reportOutputDirectory = new File(pathReport)
    List<String> jsonReportFiles = new ArrayList<>()
    jsonReportFiles.add(pathCucumber)

    String buildNumber = "1"
    String buildProjectName = "guard-dog-automation-api"
    String pluginUrlPath = ""
    boolean skippedFails = true
    boolean pendingFails = true
    boolean undefinedFails = true
    boolean missingFails = true
    boolean flashCharts = true
    boolean runWithJenkins = false
    boolean artifactsEnabled = false
    String artifactConfig = ""
    boolean highCharts = true
    boolean parallelTesting = false

    ReportBuilder reportBuilder = new ReportBuilder(jsonReportFiles, reportOutputDirectory,
            pluginUrlPath, buildNumber, buildProjectName, skippedFails, pendingFails,
            undefinedFails, missingFails, flashCharts, runWithJenkins, artifactsEnabled,
            artifactConfig, highCharts, parallelTesting)
    reportBuilder.generateReports()
}


tasks.withType(Test) {
    // enable TestNG support (default is JUnit)
    useTestNG()

    testLogging.showStandardStreams = true

    // set JVM arguments for the features.test JVM(s)
    scanForTestClasses = false
    ignoreFailures = true

    //turn off Gradle's HTML report to avoid replacing the reports generated by TestNG library:
    reports.html.enabled = false
    //systemProperty "log4j.appender.file.File", "build/myLogs.log"
// Define the custom properties to run the regression
    systemProperty "filterTags", filterTags
}

task executeTests(type: Test) {
    useTestNG()
    options {
        jvmArgs = ["-Dcucumber.plugin=json:build/cucumber/cucumber.json"]
        jvmArgs = ['-Dcucumber.execution.strict=' + true]
        jvmArgs = ['-Dcucumber.filter.tags=' + filterTags]
    }
    doLast {
        generateReport('build/cucumber/cucumber.json', 'build/cucumber/reports')
    }
}

